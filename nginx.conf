user root;

worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;

    default_type application/octet-stream;
    client_max_body_size 20M;
    
    sendfile on;
    keepalive_timeout 65;

    server {
        listen 80;
        server_name hackathon21.ru www.hackathon21.ru; 
        
        location ~ /.well-known/acme-challenge/(.*) {
            root /var/www/certbot;
            default_type text/plain;
            add_header Content-Type text/plain;
        }
        
        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name hackathon21.ru www.hackathon21.ru; 

        ssl_certificate /etc/letsencrypt/live/hackathon21.ru/fullchain.pem; 
        ssl_certificate_key /etc/letsencrypt/live/hackathon21.ru/privkey.pem; 
        
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:10m;
        ssl_session_tickets off;

        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
        
        client_body_timeout 300s;
        proxy_read_timeout 300s;
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;

        location / {
            proxy_pass http://frontend:80/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_cache_bypass $http_upgrade;
        }

        location /api/cases/files/ {
            proxy_pass http://backend:3000/cases/files/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_intercept_errors on;
            proxy_buffering off;
            proxy_request_buffering off;
            add_header Content-Disposition "attachment";
        }

        location /api/ {
            add_header X-Debug-Message "Proxying to backend" always;
            rewrite ^/api/(.*) /$1 break;
            proxy_pass http://backend:3000/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_cache_bypass $http_upgrade;
            error_log /var/log/nginx/api_error.log debug;
            proxy_intercept_errors off;
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }
    }
}