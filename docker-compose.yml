version: '3.8'



services:
  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"  # Добавлен порт для HTTPS
    volumes:
      - "./nginx.conf:/etc/nginx/nginx.conf"
      - ./backend/uploads:/uploads
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot 
    depends_on:
      - backend
      - frontend
    networks:
      - external-network
      - internal-network
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - nginx
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    hostname: backend
    ports:
      - "3001:3000"

    env_file:
      - ./backend/.env
    volumes:
      - ./backend:/app
      - /app/node_modules
    working_dir: /app
    depends_on:
      - mongo
    networks:
      - internal-network
    command: >
      sh -c "
        npm install &&
        chmod -R 777 /app/uploads &&
        ls -la /app/uploads &&
        echo 'Creating admin user...' &&
        node admin-setup.js &&
        echo 'Starting backend server...' &&
        node server.js
      "

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    hostname: frontend
    ports:
      - "3000:80"
    networks:
      - internal-network

  mongo:
    image: mongo:latest
    volumes:
      - mongo-data:/data/db
    networks:
      - internal-network
    ports:
      - "27017:27017"

  init-admin:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: init-admin
    environment:
      - MONGODB_URI=mongodb://mongo:27017/hackathon
      - ADMIN_PASSWORD=admin123
    volumes:
      - ./backend:/app
    working_dir: /app
    depends_on:
      - mongo
    networks:
      - internal-network
    command: >
      sh -c "
        npm install &&
        echo 'Creating admin user...' &&
        node admin-setup.js
      "
    restart: "no"

networks:
  internal-network:
    driver: bridge
    internal: true
  external-network:
    driver: bridge

volumes:
  mongo-data: